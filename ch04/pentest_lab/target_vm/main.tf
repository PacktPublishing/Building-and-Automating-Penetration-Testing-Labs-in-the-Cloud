resource "random_string" "random_password" {
  length           = 12
  special          = true
  override_special = "!#$%&"
}

locals {
    vm_username = "testuser"
    vm_password = random_string.random_password.result
}

locals {
  script = templatefile("${path.module}/target_boot_script.tpl", {
    vm_username = local.vm_username
    vm_password = local.vm_password
  })

  subnet_01 = var.subnet_01
}

resource "google_compute_instance" "target_vm" {
  name         = "vm-target"
  machine_type = "f1-micro"
  zone         = "us-central1-c"

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-11"
    }
  }

  metadata_startup_script = local.script

  network_interface {
    subnetwork = local.subnet_01

    access_config {}
  }
}

locals {
  max_retries = 20
  retry_delay = 30
}

resource "null_resource" "wait_for_startup_script" {
  depends_on = [google_compute_instance.target_vm]

  provisioner "local-exec" {
    interpreter = ["bash", "-c"]
    command = templatefile("${path.module}/wait_for_boot.tpl", {
        max_retries    = local.max_retries
        target_vm_name = google_compute_instance.target_vm.name
        target_vm_zone = google_compute_instance.target_vm.zone
        retry_delay    = local.retry_delay
    })
  }

  provisioner "local-exec" {
    when    = destroy
    command = "true"
  }
}


locals {
    target_vm = google_compute_instance.target_vm
    target_vm_ni = local.target_vm.network_interface.0
    target_vm_private_ip = local.target_vm_ni.network_ip
    target_vm_ac = local.target_vm_ni.access_config.0
    target_vm_public_ip = local.target_vm_ac.nat_ip
}
